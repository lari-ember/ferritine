name: Tests

# Workflow para executar testes automatizados em cada push e pull request.
#
# Este workflow:
# 1. Configura o ambiente Python
# 2. Instala as dependências
# 3. Executa os testes com pytest
# 4. Gera relatório de cobertura

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache de dependências
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov

    - name: Executar testes com pytest
      run: |
        PYTHONPATH=$PYTHONPATH:. python -m pytest -v --cov=app --cov-report=xml --cov-report=term

    - name: Upload de cobertura para Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

